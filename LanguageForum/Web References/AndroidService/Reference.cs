//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanguageForum.AndroidService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AndroidServiceSoap", Namespace="http://www.xamarin.com/webservices")]
    public partial class AndroidService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPersonDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterLessonOperationCompleted;
        
        /// CodeRemarks
        public AndroidService() {
            this.Url = "http://lf.medevid.cloud/AndroidService.asmx";
        }
        
        public AndroidService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event GetPersonDetailCompletedEventHandler GetPersonDetailCompleted;
        
        /// CodeRemarks
        public event RegisterNewStudentCompletedEventHandler RegisterNewStudentCompleted;
        
        /// CodeRemarks
        public event RegisterLessonCompletedEventHandler RegisterLessonCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xamarin.com/webservices/GetPersonDetail", RequestNamespace="http://www.xamarin.com/webservices", ResponseNamespace="http://www.xamarin.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonDetail(string code) {
            object[] results = this.Invoke("GetPersonDetail", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetPersonDetailAsync(string code) {
            this.GetPersonDetailAsync(code, null);
        }
        
        /// CodeRemarks
        public void GetPersonDetailAsync(string code, object userState) {
            if ((this.GetPersonDetailOperationCompleted == null)) {
                this.GetPersonDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonDetailOperationCompleted);
            }
            this.InvokeAsync("GetPersonDetail", new object[] {
                        code}, this.GetPersonDetailOperationCompleted, userState);
        }
        
        private void OnGetPersonDetailOperationCompleted(object arg) {
            if ((this.GetPersonDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonDetailCompleted(this, new GetPersonDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xamarin.com/webservices/RegisterNewStudent", RequestNamespace="http://www.xamarin.com/webservices", ResponseNamespace="http://www.xamarin.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterNewStudent(string firstname, string lastname, System.DateTime birthday, string email, string phone, string city, string language, string learningLanguage, string street, string zip, string ico, string photo) {
            object[] results = this.Invoke("RegisterNewStudent", new object[] {
                        firstname,
                        lastname,
                        birthday,
                        email,
                        phone,
                        city,
                        language,
                        learningLanguage,
                        street,
                        zip,
                        ico,
                        photo});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void RegisterNewStudentAsync(string firstname, string lastname, System.DateTime birthday, string email, string phone, string city, string language, string learningLanguage, string street, string zip, string ico, string photo) {
            this.RegisterNewStudentAsync(firstname, lastname, birthday, email, phone, city, language, learningLanguage, street, zip, ico, photo, null);
        }
        
        /// CodeRemarks
        public void RegisterNewStudentAsync(string firstname, string lastname, System.DateTime birthday, string email, string phone, string city, string language, string learningLanguage, string street, string zip, string ico, string photo, object userState) {
            if ((this.RegisterNewStudentOperationCompleted == null)) {
                this.RegisterNewStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewStudentOperationCompleted);
            }
            this.InvokeAsync("RegisterNewStudent", new object[] {
                        firstname,
                        lastname,
                        birthday,
                        email,
                        phone,
                        city,
                        language,
                        learningLanguage,
                        street,
                        zip,
                        ico,
                        photo}, this.RegisterNewStudentOperationCompleted, userState);
        }
        
        private void OnRegisterNewStudentOperationCompleted(object arg) {
            if ((this.RegisterNewStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewStudentCompleted(this, new RegisterNewStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xamarin.com/webservices/RegisterLesson", RequestNamespace="http://www.xamarin.com/webservices", ResponseNamespace="http://www.xamarin.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterLesson(string teacherCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> latitude, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> longitude, string[] students, string locationDescription, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> lessonStart, string lessonDesctiption, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> lessonDuration, bool canceled) {
            object[] results = this.Invoke("RegisterLesson", new object[] {
                        teacherCode,
                        latitude,
                        longitude,
                        students,
                        locationDescription,
                        lessonStart,
                        lessonDesctiption,
                        lessonDuration,
                        canceled});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void RegisterLessonAsync(string teacherCode, System.Nullable<double> latitude, System.Nullable<double> longitude, string[] students, string locationDescription, System.Nullable<System.DateTime> lessonStart, string lessonDesctiption, System.Nullable<decimal> lessonDuration, bool canceled) {
            this.RegisterLessonAsync(teacherCode, latitude, longitude, students, locationDescription, lessonStart, lessonDesctiption, lessonDuration, canceled, null);
        }
        
        /// CodeRemarks
        public void RegisterLessonAsync(string teacherCode, System.Nullable<double> latitude, System.Nullable<double> longitude, string[] students, string locationDescription, System.Nullable<System.DateTime> lessonStart, string lessonDesctiption, System.Nullable<decimal> lessonDuration, bool canceled, object userState) {
            if ((this.RegisterLessonOperationCompleted == null)) {
                this.RegisterLessonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterLessonOperationCompleted);
            }
            this.InvokeAsync("RegisterLesson", new object[] {
                        teacherCode,
                        latitude,
                        longitude,
                        students,
                        locationDescription,
                        lessonStart,
                        lessonDesctiption,
                        lessonDuration,
                        canceled}, this.RegisterLessonOperationCompleted, userState);
        }
        
        private void OnRegisterLessonOperationCompleted(object arg) {
            if ((this.RegisterLessonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterLessonCompleted(this, new RegisterLessonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    public delegate void GetPersonDetailCompletedEventHandler(object sender, GetPersonDetailCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    public delegate void RegisterNewStudentCompletedEventHandler(object sender, RegisterNewStudentCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    public delegate void RegisterLessonCompletedEventHandler(object sender, RegisterLessonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "7.1.3.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterLessonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterLessonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
